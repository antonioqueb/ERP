services:
  db-service:
    image: postgres:15
    container_name: gestpro-erp-db-service
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: gestpro_db
    ports:
      - "5432:5432"
    networks:
      - gestpro-network
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8002:8002"
    env_file:
      - .env
    networks:
      - gestpro-network
    depends_on:
      db-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      sh -c "
      /usr/bin/wait-for-it.sh db-service:5432 --timeout=30 -- 
      python3 -m uvicorn app.main:app --host 0.0.0.0 --port 8002
      "

  gestpro-core:
    build:
      context: ./gestpro-erp-core
      dockerfile: Dockerfile
    container_name: gestpro-erp-core
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - gestpro-network
    depends_on:
      auth-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      sh -c "
      /usr/bin/wait-for-it.sh auth-service:8002 --timeout=30 -- 
      uvicorn main:app --host 0.0.0.0 --port 8000
      "

networks:
  gestpro-network:
    driver: bridge

volumes:
  db-data:
